import{_ as e}from"./chunks/ch3.NEz5xXG9.js";import{_ as a,c as r,o as t,a1 as o}from"./chunks/framework.biRBrEtS.js";const b=JSON.parse('{"title":"3. Storage and Retrieval","description":"","frontmatter":{},"headers":[],"relativePath":"en-us/ch3.md","filePath":"en-us/ch3.md"}'),n={name:"en-us/ch3.md"},i=o('<h1 id="_3-storage-and-retrieval" tabindex="-1">3. Storage and Retrieval <a class="header-anchor" href="#_3-storage-and-retrieval" aria-label="Permalink to &quot;3. Storage and Retrieval&quot;">​</a></h1><p><img src="'+e+'" alt=""></p><blockquote><p><em>Wer Ordnung hält, ist nur zu faul zum Suchen. (If you keep things tidily ordered, you’re just too lazy to go searching.)</em></p><p>​ — German proverb</p></blockquote><hr><p>On the most fundamental level, a database needs to do two things: when you give it some data, it should store the data, and when you ask it again later, it should give the data back to you.</p><p>In <a href="./ch2.html">Chapter 2</a> we discussed data models and query languages—i.e., the format in which you (the application developer) give the database your data, and the mecha‐ nism by which you can ask for it again later. In this chapter we discuss the same from the database’s point of view: how we can store the data that we’re given, and how we can find it again when we’re asked for it.</p><p>Why should you, as an application developer, care how the database handles storage and retrieval internally? You’re probably not going to implement your own storage engine from scratch, but you <em>do</em> need to select a storage engine that is appropriate for your application, from the many that are available. In order to tune a storage engine to perform well on your kind of workload, you need to have a rough idea of what the storage engine is doing under the hood.</p><p>In particular, there is a big difference between storage engines that are optimized for transactional workloads and those that are optimized for analytics. We will explore that distinction later in “<a href="#transaction-processing-or-analytics">Transaction Processing or Analytics?</a>”, and in “<a href="#column-oriented-storage">Column-Oriented Storage</a>” we’ll discuss a family of storage engines that is optimized for analytics.</p><p>However, first we’ll start this chapter by talking about storage engines that are used in the kinds of databases that you’re probably familiar with: traditional relational data‐ bases, and also most so-called NoSQL databases. We will examine two families of storage engines: <em>log-structured</em> storage engines, and <em>page-oriented</em> storage engines such as B-trees.</p><h2 id="" tabindex="-1">…… <a class="header-anchor" href="#" aria-label="Permalink to &quot;……&quot;">​</a></h2><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>In this chapter we tried to get to the bottom of how databases handle storage and retrieval. What happens when you store data in a database, and what does the data‐ base do when you query for the data again later?</p><p>On a high level, we saw that storage engines fall into two broad categories: those opti‐ mized for transaction processing (OLTP), and those optimized for analytics (OLAP). There are big differences between the access patterns in those use cases:</p><ul><li><p>OLTP systems are typically user-facing, which means that they may see a huge volume of requests. In order to handle the load, applications usually only touch a small number of records in each query. The application requests records using some kind of key, and the storage engine uses an index to find the data for the requested key. Disk seek time is often the bottleneck here.</p></li><li><p>Data warehouses and similar analytic systems are less well known, because they are primarily used by business analysts, not by end users. They handle a much lower volume of queries than OLTP systems, but each query is typically very demanding, requiring many millions of records to be scanned in a short time. Disk bandwidth (not seek time) is often the bottleneck here, and column- oriented storage is an increasingly popular solution for this kind of workload.</p><p>On the OLTP side, we saw storage engines from two main schools of thought:</p></li><li><p>The log-structured school, which only permits appending to files and deleting obsolete files, but never updates a file that has been written. Bitcask, SSTables, LSM-trees, LevelDB, Cassandra, HBase, Lucene, and others belong to this group.</p></li><li><p>The update-in-place school, which treats the disk as a set of fixed-size pages that can be overwritten. B-trees are the biggest example of this philosophy, being used in all major relational databases and also many nonrelational ones.</p><p>Log-structured storage engines are a comparatively recent development. Their key idea is that they systematically turn random-access writes into sequential writes on disk, which enables higher write throughput due to the performance characteristics of hard drives and SSDs.</p></li></ul><p>Finishing off the OLTP side, we did a brief tour through some more complicated indexing structures, and databases that are optimized for keeping all data in memory.</p><p>We then took a detour from the internals of storage engines to look at the high-level architecture of a typical data warehouse. This background illustrated why analytic workloads are so different from OLTP: when your queries require sequentially scan‐ ning across a large number of rows, indexes are much less relevant. Instead it becomes important to encode data very compactly, to minimize the amount of data that the query needs to read from disk. We discussed how column-oriented storage helps achieve this goal.</p><p>As an application developer, if you’re armed with this knowledge about the internals of storage engines, you are in a much better position to know which tool is best suited for your particular application. If you need to adjust a database’s tuning parameters, this understanding allows you to imagine what effect a higher or a lower value may have.</p><p>Although this chapter couldn’t make you an expert in tuning any one particular stor‐ age engine, it has hopefully equipped you with enough vocabulary and ideas that you can make sense of the documentation for the database of your choice.</p><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><hr><ol><li><p>Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman: <em>Data Structures and Algorithms</em>. Addison-Wesley, 1983. ISBN: 978-0-201-00023-8</p></li><li><p>Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein: <em>Introduction to Algorithms</em>, 3rd edition. MIT Press, 2009. ISBN: 978-0-262-53305-8</p></li><li><p>Justin Sheehy and David Smith: “<a href="http://basho.com/wp-content/uploads/2015/05/bitcask-intro.pdf" target="_blank" rel="noreferrer">Bitcask: A Log-Structured Hash Table for Fast Key/Value Data</a>,” Basho Technologies, April 2010.</p></li><li><p>Yinan Li, Bingsheng He, Robin Jun Yang, et al.: “<a href="http://www.vldb.org/pvldb/vldb2010/papers/R106.pdf" target="_blank" rel="noreferrer">Tree Indexing on Solid State Drives</a>,” <em>Proceedings of the VLDB Endowment</em>, volume 3, number 1, pages 1195–1206, September 2010.</p></li><li><p>Goetz Graefe: “<a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.219.7269&amp;rep=rep1&amp;type=pdf" target="_blank" rel="noreferrer">Modern B-Tree Techniques</a>,” <em>Foundations and Trends in Databases</em>, volume 3, number 4, pages 203–402, August 2011. <a href="http://dx.doi.org/10.1561/1900000028" target="_blank" rel="noreferrer">doi:10.1561/1900000028</a></p></li><li><p>Jeffrey Dean and Sanjay Ghemawat: “<a href="https://github.com/google/leveldb/blob/master/doc/impl.html" target="_blank" rel="noreferrer">LevelDB Implementation Notes</a>,” <em>leveldb.googlecode.com</em>.</p></li><li><p>Dhruba Borthakur: “<a href="http://rocksdb.blogspot.com/" target="_blank" rel="noreferrer">The History of RocksDB</a>,” <em>rocksdb.blogspot.com</em>, November 24, 2013.</p></li><li><p>Matteo Bertozzi: “<a href="http://blog.cloudera.com/blog/2012/06/hbase-io-hfile-input-output/" target="_blank" rel="noreferrer">Apache HBase I/O – HFile</a>,” <em>blog.cloudera.com</em>, June, 29 2012.</p></li><li><p>Fay Chang, Jeffrey Dean, Sanjay Ghemawat, et al.: “<a href="http://research.google.com/archive/bigtable.html" target="_blank" rel="noreferrer">Bigtable: A Distributed Storage System for Structured Data</a>,” at <em>7th USENIX Symposium on Operating System Design and Implementation</em> (OSDI), November 2006.</p></li><li><p>Patrick O&#39;Neil, Edward Cheng, Dieter Gawlick, and Elizabeth O&#39;Neil: “<a href="http://www.cs.umb.edu/~poneil/lsmtree.pdf" target="_blank" rel="noreferrer">The Log-Structured Merge-Tree (LSM-Tree)</a>,” <em>Acta Informatica</em>, volume 33, number 4, pages 351–385, June 1996. <a href="http://dx.doi.org/10.1007/s002360050048" target="_blank" rel="noreferrer">doi:10.1007/s002360050048</a></p></li><li><p>Mendel Rosenblum and John K. Ousterhout: “<a href="http://research.cs.wisc.edu/areas/os/Qual/papers/lfs.pdf" target="_blank" rel="noreferrer">The Design and Implementation of a Log-Structured File System</a>,” <em>ACM Transactions on Computer Systems</em>, volume 10, number 1, pages 26–52, February 1992. <a href="http://dx.doi.org/10.1145/146941.146943" target="_blank" rel="noreferrer">doi:10.1145/146941.146943</a></p></li><li><p>Adrien Grand: “<a href="http://www.slideshare.net/lucenerevolution/what-is-inaluceneagrandfinal" target="_blank" rel="noreferrer">What Is in a Lucene Index?</a>,” at <em>Lucene/Solr Revolution</em>, November 14, 2013.</p></li><li><p>Deepak Kandepet: “<a href="http://hackerlabs.github.io/blog/2011/10/01/hacking-lucene-the-index-format/index.html" target="_blank" rel="noreferrer">Hacking Lucene—The Index Format</a>,” <em>hackerlabs.org</em>, October 1, 2011.</p></li><li><p>Michael McCandless: “<a href="http://blog.mikemccandless.com/2011/02/visualizing-lucenes-segment-merges.html" target="_blank" rel="noreferrer">Visualizing Lucene&#39;s Segment Merges</a>,” <em>blog.mikemccandless.com</em>, February 11, 2011.</p></li><li><p>Burton H. Bloom: “<a href="http://www.cs.upc.edu/~diaz/p422-bloom.pdf" target="_blank" rel="noreferrer">Space/Time Trade-offs in Hash Coding with Allowable Errors</a>,” <em>Communications of the ACM</em>, volume 13, number 7, pages 422–426, July 1970. <a href="http://dx.doi.org/10.1145/362686.362692" target="_blank" rel="noreferrer">doi:10.1145/362686.362692</a></p></li><li><p>“<a href="https://cassandra.apache.org/doc/latest/operating/compaction.html" target="_blank" rel="noreferrer">Operating Cassandra: Compaction</a>,” Apache Cassandra Documentation v4.0, 2016.</p></li><li><p>Rudolf Bayer and Edward M. McCreight: “<a href="http://www.dtic.mil/cgi-bin/GetTRDoc?AD=AD0712079" target="_blank" rel="noreferrer">Organization and Maintenance of Large Ordered Indices</a>,” Boeing Scientific Research Laboratories, Mathematical and Information Sciences Laboratory, report no. 20, July 1970.</p></li><li><p>Douglas Comer: “<a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.96.6637&amp;rep=rep1&amp;type=pdf" target="_blank" rel="noreferrer">The Ubiquitous B-Tree</a>,” <em>ACM Computing Surveys</em>, volume 11, number 2, pages 121–137, June 1979. <a href="http://dx.doi.org/10.1145/356770.356776" target="_blank" rel="noreferrer">doi:10.1145/356770.356776</a></p></li><li><p>Emmanuel Goossaert: “<a href="http://codecapsule.com/2014/02/12/coding-for-ssds-part-1-introduction-and-table-of-contents/" target="_blank" rel="noreferrer">Coding for SSDs</a>,” <em>codecapsule.com</em>, February 12, 2014.</p></li><li><p>C. Mohan and Frank Levine: “<a href="http://www.ics.uci.edu/~cs223/papers/p371-mohan.pdf" target="_blank" rel="noreferrer">ARIES/IM: An Efficient and High Concurrency Index Management Method Using Write-Ahead Logging</a>,” at <em>ACM International Conference on Management of Data</em> (SIGMOD), June 1992. <a href="http://dx.doi.org/10.1145/130283.130338" target="_blank" rel="noreferrer">doi:10.1145/130283.130338</a></p></li><li><p>Howard Chu: “<a href="https://buildstuff14.sched.com/event/08a1a368e272eb599a52e08b4c3c779d" target="_blank" rel="noreferrer">LDAP at Lightning Speed</a>,” at <em>Build Stuff &#39;14</em>, November 2014.</p></li><li><p>Bradley C. Kuszmaul: “<a href="http://insideanalysis.com/wp-content/uploads/2014/08/Tokutek_lsm-vs-fractal.pdf" target="_blank" rel="noreferrer">A Comparison of Fractal Trees to Log-Structured Merge (LSM) Trees</a>,” <em>tokutek.com</em>, April 22, 2014.</p></li><li><p>Manos Athanassoulis, Michael S. Kester, Lukas M. Maas, et al.: “<a href="http://openproceedings.org/2016/conf/edbt/paper-12.pdf" target="_blank" rel="noreferrer">Designing Access Methods: The RUM Conjecture</a>,” at <em>19th International Conference on Extending Database Technology</em> (EDBT), March 2016. <a href="http://dx.doi.org/10.5441/002/edbt.2016.42" target="_blank" rel="noreferrer">doi:10.5441/002/edbt.2016.42</a></p></li><li><p>Peter Zaitsev: “<a href="https://www.percona.com/blog/2006/08/04/innodb-double-write/" target="_blank" rel="noreferrer">Innodb Double Write</a>,” <em>percona.com</em>, August 4, 2006.</p></li><li><p>Tomas Vondra: “<a href="http://blog.2ndquadrant.com/on-the-impact-of-full-page-writes/" target="_blank" rel="noreferrer">On the Impact of Full-Page Writes</a>,” <em>blog.2ndquadrant.com</em>, November 23, 2016.</p></li><li><p>Mark Callaghan: “<a href="http://smalldatum.blogspot.co.uk/2016/01/summary-of-advantages-of-lsm-vs-b-tree.html" target="_blank" rel="noreferrer">The Advantages of an LSM vs a B-Tree</a>,” <em>smalldatum.blogspot.co.uk</em>, January 19, 2016.</p></li><li><p>Mark Callaghan: “<a href="http://www.codemesh.io/codemesh/mark-callaghan" target="_blank" rel="noreferrer">Choosing Between Efficiency and Performance with RocksDB</a>,” at <em>Code Mesh</em>, November 4, 2016.</p></li><li><p>Michi Mutsuzaki: “<a href="https://github.com/m1ch1/mapkeeper/wiki/MySQL-vs.-LevelDB" target="_blank" rel="noreferrer">MySQL vs. LevelDB</a>,” <em>github.com</em>, August 2011.</p></li><li><p>Benjamin Coverston, Jonathan Ellis, et al.: “<a href="https://issues.apache.org/jira/browse/CASSANDRA-1608" target="_blank" rel="noreferrer">CASSANDRA-1608: Redesigned Compaction</a>, <em>issues.apache.org</em>, July 2011.</p></li><li><p>Igor Canadi, Siying Dong, and Mark Callaghan: “<a href="https://github.com/facebook/rocksdb/wiki/RocksDB-Tuning-Guide" target="_blank" rel="noreferrer">RocksDB Tuning Guide</a>,” <em>github.com</em>, 2016.</p></li><li><p><a href="http://dev.mysql.com/doc/refman/5.7/en/index.html" target="_blank" rel="noreferrer"><em>MySQL 5.7 Reference Manual</em></a>. Oracle, 2014.</p></li><li><p><a href="http://msdn.microsoft.com/en-us/library/ms130214.aspx" target="_blank" rel="noreferrer"><em>Books Online for SQL Server 2012</em></a>. Microsoft, 2012.</p></li><li><p>Joe Webb: “<a href="https://www.simple-talk.com/sql/learn-sql-server/using-covering-indexes-to-improve-query-performance/" target="_blank" rel="noreferrer">Using Covering Indexes to Improve Query Performance</a>,” <em>simple-talk.com</em>, 29 September 2008.</p></li><li><p>Frank Ramsak, Volker Markl, Robert Fenk, et al.: “<a href="http://www.vldb.org/conf/2000/P263.pdf" target="_blank" rel="noreferrer">Integrating the UB-Tree into a Database System Kernel</a>,” at <em>26th International Conference on Very Large Data Bases</em> (VLDB), September 2000.</p></li><li><p>The PostGIS Development Group: “<a href="http://postgis.net/docs/manual-2.1/" target="_blank" rel="noreferrer">PostGIS 2.1.2dev Manual</a>,” <em>postgis.net</em>, 2014.</p></li><li><p>Robert Escriva, Bernard Wong, and Emin Gün Sirer: “<a href="http://www.cs.princeton.edu/courses/archive/fall13/cos518/papers/hyperdex.pdf" target="_blank" rel="noreferrer">HyperDex: A Distributed, Searchable Key-Value Store</a>,” at <em>ACM SIGCOMM Conference</em>, August 2012. <a href="http://dx.doi.org/10.1145/2377677.2377681" target="_blank" rel="noreferrer">doi:10.1145/2377677.2377681</a></p></li><li><p>Michael McCandless: “<a href="http://blog.mikemccandless.com/2011/03/lucenes-fuzzyquery-is-100-times-faster.html" target="_blank" rel="noreferrer">Lucene&#39;s FuzzyQuery Is 100 Times Faster in 4.0</a>,” <em>blog.mikemccandless.com</em>, March 24, 2011.</p></li><li><p>Steffen Heinz, Justin Zobel, and Hugh E. Williams: “<a href="http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.18.3499" target="_blank" rel="noreferrer">Burst Tries: A Fast, Efficient Data Structure for String Keys</a>,” <em>ACM Transactions on Information Systems</em>, volume 20, number 2, pages 192–223, April 2002. <a href="http://dx.doi.org/10.1145/506309.506312" target="_blank" rel="noreferrer">doi:10.1145/506309.506312</a></p></li><li><p>Klaus U. Schulz and Stoyan Mihov: “<a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.16.652" target="_blank" rel="noreferrer">Fast String Correction with Levenshtein Automata</a>,” <em>International Journal on Document Analysis and Recognition</em>, volume 5, number 1, pages 67–85, November 2002. <a href="http://dx.doi.org/10.1007/s10032-002-0082-8" target="_blank" rel="noreferrer">doi:10.1007/s10032-002-0082-8</a></p></li><li><p>Christopher D. Manning, Prabhakar Raghavan, and Hinrich Schütze: <a href="http://nlp.stanford.edu/IR-book/" target="_blank" rel="noreferrer"><em>Introduction to Information Retrieval</em></a>. Cambridge University Press, 2008. ISBN: 978-0-521-86571-5, available online at <em>nlp.stanford.edu/IR-book</em></p></li><li><p>Michael Stonebraker, Samuel Madden, Daniel J. Abadi, et al.: “<a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.137.3697&amp;rep=rep1&amp;type=pdf" target="_blank" rel="noreferrer">The End of an Architectural Era (It’s Time for a Complete Rewrite)</a>,” at <em>33rd International Conference on Very Large Data Bases</em> (VLDB), September 2007.</p></li><li><p>“<a href="https://www.voltdb.com/wptechnicaloverview" target="_blank" rel="noreferrer">VoltDB Technical Overview White Paper</a>,” VoltDB, 2014.</p></li><li><p>Stephen M. Rumble, Ankita Kejriwal, and John K. Ousterhout: “<a href="https://www.usenix.org/system/files/conference/fast14/fast14-paper_rumble.pdf" target="_blank" rel="noreferrer">Log-Structured Memory for DRAM-Based Storage</a>,” at <em>12th USENIX Conference on File and Storage Technologies</em> (FAST), February 2014.</p></li><li><p>Stavros Harizopoulos, Daniel J. Abadi, Samuel Madden, and Michael Stonebraker: “<a href="http://hstore.cs.brown.edu/papers/hstore-lookingglass.pdf" target="_blank" rel="noreferrer">OLTP Through the Looking Glass, and What We Found There</a>,” at <em>ACM International Conference on Management of Data</em> (SIGMOD), June 2008. <a href="http://dx.doi.org/10.1145/1376616.1376713" target="_blank" rel="noreferrer">doi:10.1145/1376616.1376713</a></p></li><li><p>Justin DeBrabant, Andrew Pavlo, Stephen Tu, et al.: “<a href="http://www.vldb.org/pvldb/vol6/p1942-debrabant.pdf" target="_blank" rel="noreferrer">Anti-Caching: A New Approach to Database Management System Architecture</a>,” <em>Proceedings of the VLDB Endowment</em>, volume 6, number 14, pages 1942–1953, September 2013.</p></li><li><p>Joy Arulraj, Andrew Pavlo, and Subramanya R. Dulloor: “<a href="http://www.pdl.cmu.edu/PDL-FTP/NVM/storage.pdf" target="_blank" rel="noreferrer">Let&#39;s Talk About Storage &amp; Recovery Methods for Non-Volatile Memory Database Systems</a>,” at <em>ACM International Conference on Management of Data</em> (SIGMOD), June 2015. <a href="http://dx.doi.org/10.1145/2723372.2749441" target="_blank" rel="noreferrer">doi:10.1145/2723372.2749441</a></p></li><li><p>Edgar F. Codd, S. B. Codd, and C. T. Salley: “<a href="http://www.minet.uni-jena.de/dbis/lehre/ss2005/sem_dwh/lit/Cod93.pdf" target="_blank" rel="noreferrer">Providing OLAP to User-Analysts: An IT Mandate</a>,” E. F. Codd Associates, 1993.</p></li><li><p>Surajit Chaudhuri and Umeshwar Dayal: “<a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/sigrecord.pdf" target="_blank" rel="noreferrer">An Overview of Data Warehousing and OLAP Technology</a>,” <em>ACM SIGMOD Record</em>, volume 26, number 1, pages 65–74, March 1997. <a href="http://dx.doi.org/10.1145/248603.248616" target="_blank" rel="noreferrer">doi:10.1145/248603.248616</a></p></li><li><p>Per-Åke Larson, Cipri Clinciu, Campbell Fraser, et al.: “<a href="http://research.microsoft.com/pubs/193599/Apollo3%20-%20Sigmod%202013%20-%20final.pdf" target="_blank" rel="noreferrer">Enhancements to SQL Server Column Stores</a>,” at <em>ACM International Conference on Management of Data</em> (SIGMOD), June 2013.</p></li><li><p>Franz Färber, Norman May, Wolfgang Lehner, et al.: “<a href="http://sites.computer.org/debull/A12mar/hana.pdf" target="_blank" rel="noreferrer">The SAP HANA Database – An Architecture Overview</a>,” <em>IEEE Data Engineering Bulletin</em>, volume 35, number 1, pages 28–33, March 2012.</p></li><li><p>Michael Stonebraker: “<a href="http://slideshot.epfl.ch/talks/166" target="_blank" rel="noreferrer">The Traditional RDBMS Wisdom Is (Almost Certainly) All Wrong</a>,” presentation at <em>EPFL</em>, May 2013.</p></li><li><p>Daniel J. Abadi: “<a href="https://web.archive.org/web/20150622074951/http://hadapt.com/blog/2013/10/02/classifying-the-sql-on-hadoop-solutions/" target="_blank" rel="noreferrer">Classifying the SQL-on-Hadoop Solutions</a>,” <em>hadapt.com</em>, October 2, 2013.</p></li><li><p>Marcel Kornacker, Alexander Behm, Victor Bittorf, et al.: “<a href="http://pandis.net/resources/cidr15impala.pdf" target="_blank" rel="noreferrer">Impala: A Modern, Open-Source SQL Engine for Hadoop</a>,” at <em>7th Biennial Conference on Innovative Data Systems Research</em> (CIDR), January 2015.</p></li><li><p>Sergey Melnik, Andrey Gubarev, Jing Jing Long, et al.: “<a href="http://research.google.com/pubs/pub36632.html" target="_blank" rel="noreferrer">Dremel: Interactive Analysis of Web-Scale Datasets</a>,” at <em>36th International Conference on Very Large Data Bases</em> (VLDB), pages 330–339, September 2010.</p></li><li><p>Ralph Kimball and Margy Ross: <em>The Data Warehouse Toolkit: The Definitive Guide to Dimensional Modeling</em>, 3rd edition. John Wiley &amp; Sons, July 2013. ISBN: 978-1-118-53080-1</p></li><li><p>Derrick Harris: “<a href="http://gigaom.com/2013/03/27/why-apple-ebay-and-walmart-have-some-of-the-biggest-data-warehouses-youve-ever-seen/" target="_blank" rel="noreferrer">Why Apple, eBay, and Walmart Have Some of the Biggest Data Warehouses You’ve Ever Seen</a>,” <em>gigaom.com</em>, March 27, 2013.</p></li><li><p>Julien Le Dem: “<a href="https://blog.twitter.com/2013/dremel-made-simple-with-parquet" target="_blank" rel="noreferrer">Dremel Made Simple with Parquet</a>,” <em>blog.twitter.com</em>, September 11, 2013.</p></li><li><p>Daniel J. Abadi, Peter Boncz, Stavros Harizopoulos, et al.: “<a href="http://cs-www.cs.yale.edu/homes/dna/papers/abadi-column-stores.pdf" target="_blank" rel="noreferrer">The Design and Implementation of Modern Column-Oriented Database Systems</a>,” <em>Foundations and Trends in Databases</em>, volume 5, number 3, pages 197–280, December 2013. <a href="http://dx.doi.org/10.1561/1900000024" target="_blank" rel="noreferrer">doi:10.1561/1900000024</a></p></li><li><p>Peter Boncz, Marcin Zukowski, and Niels Nes: “<a href="http://www.cidrdb.org/cidr2005/papers/P19.pdf" target="_blank" rel="noreferrer">MonetDB/X100: Hyper-Pipelining Query Execution</a>,” at <em>2nd Biennial Conference on Innovative Data Systems Research</em> (CIDR), January 2005.</p></li><li><p>Jingren Zhou and Kenneth A. Ross: “<a href="http://www1.cs.columbia.edu/~kar/pubsk/simd.pdf" target="_blank" rel="noreferrer">Implementing Database Operations Using SIMD Instructions</a>,” at <em>ACM International Conference on Management of Data</em> (SIGMOD), pages 145–156, June 2002. <a href="http://dx.doi.org/10.1145/564691.564709" target="_blank" rel="noreferrer">doi:10.1145/564691.564709</a></p></li><li><p>Michael Stonebraker, Daniel J. Abadi, Adam Batkin, et al.: “<a href="http://www.vldb2005.org/program/paper/thu/p553-stonebraker.pdf" target="_blank" rel="noreferrer">C-Store: A Column-oriented DBMS</a>,” at <em>31st International Conference on Very Large Data Bases</em> (VLDB), pages 553–564, September 2005.</p></li><li><p>Andrew Lamb, Matt Fuller, Ramakrishna Varadarajan, et al.: “<a href="http://vldb.org/pvldb/vol5/p1790_andrewlamb_vldb2012.pdf" target="_blank" rel="noreferrer">The Vertica Analytic Database: C-Store 7 Years Later</a>,” <em>Proceedings of the VLDB Endowment</em>, volume 5, number 12, pages 1790–1801, August 2012.</p></li><li><p>Julien Le Dem and Nong Li: “<a href="http://www.slideshare.net/julienledem/th-210pledem" target="_blank" rel="noreferrer">Efficient Data Storage for Analytics with Apache Parquet 2.0</a>,” at <em>Hadoop Summit</em>, San Jose, June 2014.</p></li><li><p>Jim Gray, Surajit Chaudhuri, Adam Bosworth, et al.: “<a href="http://arxiv.org/pdf/cs/0701155.pdf" target="_blank" rel="noreferrer">Data Cube: A Relational Aggregation Operator Generalizing Group-By, Cross-Tab, and Sub-Totals</a>,” <em>Data Mining and Knowledge Discovery</em>, volume 1, number 1, pages 29–53, March 2007. <a href="http://dx.doi.org/10.1023/A:1009726021843" target="_blank" rel="noreferrer">doi:10.1023/A:1009726021843</a></p></li></ol>',21),l=[i];function s(h,d,p,m,c,u){return t(),r("div",null,l)}const w=a(n,[["render",s]]);export{b as __pageData,w as default};
